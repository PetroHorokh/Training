@using Rent.DAL.Authentication
@using (Html.BeginForm())
{
    using (Html.DevExtreme().ValidationGroup())
    {
        @Html.AntiForgeryToken()

        @(Html.DevExtreme().Form<SignInUser>()
            .ID("form")
            .OnInitialized("onInitialized")
            .OnOptionChanged("onOptionChanged")
            .ShowValidationSummary(true)
            .Items(items =>
            {
                items.AddGroup()
                    .Caption("Login")
                    .Items(groupItems =>
                    {
                        groupItems.AddSimpleFor(m => m.Email)
                            .Editor(e => e.TextBox()
                                .Mode(TextBoxMode.Email)
                                .InputAttr("aria-label", "Email")
                                .ValueChangeEvent("keyup")
                            );

                        groupItems.AddSimpleFor(m => m.Password)
                            .Editor(e => e.TextBox()
                                .Mode(TextBoxMode.Password)
                                .InputAttr("aria-label", "Password")
                                .ValueChangeEvent("keyup")
                                .Buttons(buttons =>
                                {
                                    buttons.Add()
                                        .Name("password")
                                        .Location(TextEditorButtonLocation.After)
                                        .Widget(w => w.Button()
                                            .Type(ButtonType.Default)
                                            .Icon("eyeopen")
                                            .StylingMode(ButtonStylingMode.Text)
                                            .OnClick("() => changePasswordMode('Password')")
                                        );
                                })
                            );
                    });

                items.AddGroup()
                    .CssClass("last-group")
                    .ColCountByScreen(c => c.Lg(0))
                    .Items(groupItems =>
                    {
                        groupItems.AddGroup()
                                .ColCountByScreen(c => c.Lg(2))
                            .CssClass("buttons-group")
                            .Items(secondGroupItems =>
                            {
                                secondGroupItems.AddButton()
                                    .Name("Reset")
                                    .ButtonOptions(b => b.Text("Reset")
                                        .Icon(Url.Content("refresh"))
                                        .Width(120)
                                        .Disabled(true)
                                        .OnClick("onResetButtonClick")
                                    );

                                secondGroupItems.AddButton()
                                    .ButtonOptions(b => b.Text("Login")
                                        .Type(ButtonType.Default)
                                        .Width(120)
                                        .OnClick("loginFormSubmit")
                                    );
                            });
                    });
            })
            .FormData(Model)
        )
    }
}
<script>
    let formInstance;

    function onInitialized(e) {
        formInstance = e.component;
    }

    function onOptionChanged(e) {
        if (e.name === 'isDirty') {
            const resetButton = formInstance.getButton('Reset');
            resetButton.option('disabled', !e.value);
        }
    }

    function onResetButtonClick(e) {
        formInstance.reset();
    }

    function changePasswordMode(name) {
        let editor = formInstance.getEditor(name);
        editor.option('mode', editor.option('mode') === 'text' ? 'password' : 'text');
    }

    function loginFormSubmit() {
        var values = $("#form").dxForm("instance").option('formData');

        $.ajax({
            type: "GET",
            url: "@Url.Action("LoginAction", "User")",
            contentType: "application/json",
            dataType: "json",
            data: values,
            success: function (data) {
                window.localStorage.setItem("Token", data.Token);
                notify('Successfully registered new user', 'success', 2000);
                formInstance.reset();
                window.location.href = '@Url.Action("Index", "Home")';
            },
            error: function (data) {
                notify(data.responseText, 'error', 2000);
                formInstance.reset();
            }
        });  
    }

    function notify(message, type, time) {
        DevExpress.ui.notify(message, type, time);
    }
</script>